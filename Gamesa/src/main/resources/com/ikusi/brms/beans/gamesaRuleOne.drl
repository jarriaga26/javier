package com.ikusi.brms.beans;

import java.util.*;


/**
rule "test envio request"
    no-loop true
when 
    request : Request( getEvent().getName()== "Test_0_3_XXX" )
then
    System.out.println("regla evaluada ver 1.0:"+request.getEvent().getName());
    request.getResponse().setResultado("CREATE");
    request.getResponse().setTiempoEspera(2);

    update( request );
    
end 


rule "device en memoria" 
   
  
when
    request : Request( getStatusBRMS() == "INICIAL", $sysID:device.sysId, $event :event.name)
    original: Request($sysID != null,$event != null,inMemory == true, device.sysId == $sysID,event.name == $event );
then 
    System.out.println("the device: "+request.getDevice().getSysId() +" is already in memory whit the same event... ");
    System.out.println("whit event: "+request.getEvent().getName());
    System.out.println("return to FUSE: NO");
    retract(request);
    update(original);
end


rule "device en memoria diferente evento" 
   
  
when
    request : Request( getStatusBRMS() == "INICIAL", $sysID:device.sysId, $event :event.name)
    Request($sysID != null,$event != null,inMemory == true, device.sysId == $sysID,event.name != $event );
then 
    System.out.println("the device: "+request.getDevice().getSysId() +" is already in memory whit the diferente event... ");
    System.out.println("whit event: "+request.getEvent().getName());
    System.out.println("whit event 2: "+$event);
    System.out.println("return to FUSE: ????");
    
end


rule "device no en memoria" 
   
when
    request : Request( getStatusBRMS() == "INICIAL",inMemory == false,$sysID:device.sysId )
   not ( exists(  Request($sysID != null,inMemory == true, device.sysId == $sysID)));
then
    System.out.println("the device was insert in memory:"+request.getDevice().getSysId());
    System.out.println("return to FUSE: WAIT");
    request.setInMemory(true);
    request.setStatusBRMS("SAVED");
    update(request);
end


rule "add to jerarquia as child"

when 
    child: Request( getStatusBRMS()== "SAVED",jerarquia == null,parents.parents != null ,parents.parents.size > 0, $padres:parents.parents )
    parent : Request(getJerarquia() != null, new Parent(device.sysId ) memberOf  $padres, $idPadre:device.sysId );
then   

    System.out.println("add child"+child.getDevice().getSysId());
    System.out.println("to hierarchy"+parent.getJerarquia().getId());
    child.setJerarquia(parent.getJerarquia());
    parent.getJerarquia().getNodos().add(child);

    update(parent.getJerarquia());
    update(parent);
    update(child);
end

rule "add to jerarquia as child 2"
no-loop
when 
    child: Request( getStatusBRMS()== "SAVED", getJerarquia() != null,parents.parents != null ,  $padres:parents.parents, $jerarquia_id: jerarquia.id )
    parent : Request(getJerarquia() != null, new Parent(device.sysId ) memberOf  $padres,jerarquia.id != $jerarquia_id, $idPadre:device.sysId );
then    
    System.out.println("-------------------------------------------------------");
    System.out.println("en regla hierarchy: ");
    System.out.println("jerarquia parent: "+parent.getDevice().getSysId()+" jerarquia: "+parent.getJerarquia().getId());
    System.out.println("jerarquia actual hijo: "+child.getJerarquia().getId());
    System.out.println("----------------------after---------------------------------");
    retract(parent.getJerarquia());
    child.getJerarquia().getNodos().addAll(parent.getJerarquia().getNodos());
    parent.setJerarquia(child.getJerarquia());
    
    
    System.out.println("jerarquia after parent: "+parent.getDevice().getSysId()+" jerarquia: "+parent.getJerarquia().getId());
    System.out.println("jerarquia after hijo: "+child.getJerarquia().getId());
    
    System.out.println("----------------------end---------------------------------");
    System.out.println("----------------------jerarquias---------------------------------");
    System.out.println("jerarquia "+parent.getJerarquia().getId()+" nodos: "+parent.getJerarquia().getNodos());
    System.out.println("jerarquia "+child.getJerarquia().getId()+" nodos: "+child.getJerarquia().getNodos());
    
    System.out.println("----------------------end---------------------------------");
    
    
    
    update(parent);
    update(child);
end



rule "jerarquia"

when 
    jerarquia: Jerarquia(type=="GAMES", $listaHijos:nodos )
then 
    
end



rule "Add to hierarchy as parent"

when
    father: Request( getStatusBRMS()== "SAVED", getJerarquia() == null, parents.parents == null);
then
    System.out.println("Creando Jerarquia...");
    System.out.println("Parent: "+father.getDevice().getSysId());
    Jerarquia jerarquia= new Jerarquia();
    jerarquia.getNodos().add(father);
    jerarquia.setId(father.getDevice().getSysId());
    jerarquia.setType("GAMESA");
    father.setJerarquia(jerarquia);
    insert(jerarquia);
    update(father);
end



rule "value jerarquia dummy..."
when 
    jerarquia: Jerarquia(type=="GAMESA", $listaHijos:nodos )
    
then
    System.out.println("regla"+jerarquia.getId()+" Jerarquia: "+$listaHijos);
end



rule "value jerarquia SAI..."
when 
    jerarquia: Jerarquia(type=="GAMESA", $listaHijos:nodos )
    requestSAI: Request(device.name == "SAI",statusBRMS=="WAIT" , event.name == "POWER FAIL + NODE DOWN" ) from   $listaHijos
    requestRP: Request(device.name == "RP",statusBRMS=="SAVED" , event.name == "NODE DOWN" ) from   $listaHijos
    requestRS: Request(device.name == "RS",statusBRMS=="SAVED" , event.name == "NODE DOWN" ) from   $listaHijos
    requestSO: Request(device.name == "SO",statusBRMS=="SAVED" , event.name == "NODE DOWN" ) from   $listaHijos
    requestIDU: Request(device.name == "IDU",statusBRMS=="SAVED" , event.name == "NODE DOWN" ) from   $listaHijos
    requestSS: Request(device.name == "SS",statusBRMS=="SAVED" , event.name == "NODE DOWN" ) from   $listaHijos
then
    System.out.println("levanta PW FAIL + NODE DOWN !!!" +$listaHijos);
    
end



rule "SAI gamesa"
   
when
     request1 : Request(device.name == "SAI", statusBRMS == "INICIAL", event.name == "NODE DOWN", $sysID:device.sysId)
     request2 : Request(jerarquia != null,$sysID != null,statusBRMS == "SAVED",event.name== "POWER FAIL",device.sysId == $sysID);
then
    System.out.println("SAI down con previo power fail:");
    request2.setStatusBRMS("SAVED");
    System.out.println("return to FUSE: WAIT for childrens: ");
    request2.getEvent().setName("POWER FAIL + NODE DOWN");
    request2.setStatusBRMS("WAIT");
    retract(request1);
    update(request2);
    update(request2.getJerarquia());
    
end

rule "busca papa"
 no-loop true
when 
    request : Request(getStatusBRMS() == "WAIT_", parents.parents.size > 0, $padres:parents.parents,$idHijo:device.sysId)
    request2 : Request( new Parent(device.sysId ) memberOf  $padres, $idPadre:device.sysId );

then 
System.out.println("device: "+$idHijo+ " Es hijo de "+$idPadre );

end 


rule "busca papa ligth"
 no-loop true
when 
    request : Request(getStatusBRMS() == "RESGISTRED_", parents.parents.size > 0, $padres:parents.parents)
then 
System.out.println("ADSdsdasdasdasd version ligth :-D"+$padres );
end

**/



//No tiene parents y existe en alguna jerarquia
rule "kruskal machete"
when 
    request : Request(getStatusBRMS() == "KRUSKAL_MACHETE", parents.parents == null)
    jerarquia: Jerarquia($nodos:nodos,new Nodo(request.getDevice().getSysId())  memberOf nodos ) 
    $nodo : Nodo(request == null) from $nodos;
then
    System.out.println("No tiene parents y existe en alguna jerarquia as dummy ");
    request.setJerarquia(jerarquia);
    Nodo nodo= new Nodo(request.getDevice().getSysId(),request.getDevice().getSysId(),request);
    jerarquia.getNodos().remove(nodo);
    jerarquia.getNodos().add(nodo);
    update(request);
    update(jerarquia);
end

//No tiene parents y no existe en alguna jerarquia
rule "kruskal machete _ add jerarquia as parent"
when 
    request : Request(getStatusBRMS() == "KRUSKAL_MACHETE", parents.parents == null)
    not(exists( Jerarquia(new Nodo(request.getDevice().getSysId())  memberOf nodos  ) ))
then
    System.out.println("Creando Jerarquia kuskal-machete... ");
    System.out.println("nodo to add: "+request.getDevice().getSysId());
    
    Nodo nodo= new Nodo(request.getDevice().getSysId(),request.getDevice().getSysId(),request);
    Jerarquia jerarquia= new Jerarquia();
    jerarquia.getNodos().add(nodo);
    jerarquia.setId(request.getDevice().getSysId());
    jerarquia.setType("GAMESA_2");
    request.setJerarquia(jerarquia);
    insert(jerarquia);
    update(request);    
end


//Es hijo y su padre no esta en el la jerarquia

rule "add to jerarquia  as child"
 when 
     request : Request(getStatusBRMS() == "KRUSKAL_MACHETE", parents.parents != null,$padres:parents.parents)
     $padre : Parent() from $padres
    not( exists(Jerarquia(new Nodo($padre.getSysId()) memberOf nodos ))) 
then
    System.out.println("Creando Jerarquia kuskal-machete as a child... ");
    System.out.println("nodo to add: "+request.getDevice().getSysId());
    Nodo nodo= new Nodo(request.getDevice().getSysId(),request.getDevice().getSysId(),request);
    Nodo nodoParentDummy= new Nodo($padre.getSysId());
    Jerarquia jerarquia= new Jerarquia();
    jerarquia.getNodos().add(nodo);
    jerarquia.getNodos().add(nodoParentDummy);
    jerarquia.setId(request.getDevice().getSysId());
    jerarquia.setType("GAMESA_2");
    request.setJerarquia(jerarquia);
    insert(jerarquia);
    update(request);    

end



rule "add to jerarquia  as child exists thisssssss"

 when 
     request : Request(getStatusBRMS() == "KRUSKAL_MACHETE", parents.parents != null,$padres:parents.parents)
     $padre : Parent() from $padres
     $jerarquia: Jerarquia( $listaNodos:nodos ,new Nodo($padre.getSysId()) memberOf nodos,new Nodo(request.getDevice().getSysId()) not memberOf nodos )
     
then
    System.out.println("add to Jerarquia kuskal-machete as a child exist... "+$listaNodos);
    System.out.println("nodo to add: "+request.getDevice().getSysId());
    Nodo nodo= new Nodo(request.getDevice().getSysId(),request.getDevice().getSysId(),request);
    $jerarquia.getNodos().add(nodo);
    request.setJerarquia($jerarquia);
    update($jerarquia);
    update(request);    
end

rule "merge jerarquias"

when 
    child : Request(getStatusBRMS() == "KRUSKAL_MACHETE",getJerarquia() != null, parents.parents != null,$padres:parents.parents,$jerarquia_id: jerarquia.id)
    parent : Request(getJerarquia() != null, new Parent(device.sysId ) memberOf  $padres,jerarquia.id != $jerarquia_id, $idPadre:device.sysId );
then

    System.out.println("-------------------------------------------------------");
    System.out.println("en regla merge hierarchy: ");
    System.out.println("jerarquia parent: "+parent.getDevice().getSysId()+" jerarquia: "+parent.getJerarquia().getId());
    System.out.println("jerarquia hijo: "+child.getDevice().getSysId()+" jerarquia: "+child.getJerarquia().getId());
    System.out.println("----------------------after---------------------------------");
    
    child.getJerarquia().getNodos().addAll(parent.getJerarquia().getNodos());
    parent.setJerarquia(child.getJerarquia());
    retract(parent.getJerarquia());
    
    System.out.println("jerarquia after parent: "+parent.getDevice().getSysId()+" jerarquia: "+parent.getJerarquia().getId());
    System.out.println("jerarquia hijo: "+child.getDevice().getSysId()+" jerarquia: "+child.getJerarquia().getId());
    
    System.out.println("----------------------end---------------------------------");
    System.out.println("----------------------jerarquias---------------------------------");
    System.out.println("jerarquia "+parent.getJerarquia().getId()+" nodos: "+parent.getJerarquia().getNodos());
    System.out.println("jerarquia "+child.getJerarquia().getId()+" nodos: "+child.getJerarquia().getNodos());
    
    System.out.println("----------------------end---------------------------------");
    
    update(parent);
    update(child);

end
